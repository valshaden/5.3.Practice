# 4.3.2. Проект с бронированием
# 4.3.3. Знакомство с enumerate() Используем не кортеж а словарь
# 4.3.4. Добавляем обработку исключений

def book_seat(seats):
    seat_name = input("Введите место для бронирования (от Б1 до Б9): ")
    try:
        # Находим индекс места, которое пользователь хочет забронировать
        if seats[seat_name] == 'свободно':
            # Отмечаем место как забронированное
            seats[seat_name] = 'забронировано'
            print(f"Место '{seat_name}' успешно забронировано.")
        else:
            print(f"Место '{seat_name}' уже забронировано или не существует.")
    #except TypeError:
    #    print(f"Место '{seat_name}' не существует.")
    except TypeError:
        print(f"Место '{seat_name}' не существует.")
        

# Инициализация списка мест с использованием спискового включения
seats = {(f"Б{i}", 'свободно') for i in range(1, 10)}
print(seats)

# Запуск функции бронирования с возможностью повторного ввода
while True:
    book_seat(seats)
    booking = input("Хотите забронировать еще одно место? (да/нет): ")
    if booking.lower() != 'да':
        break

# Отображение итогового состояния бронирования с использованием enumerate
print("Итоговое состояние бронирования мест:")
print("(с использованием enumerate)")
for i, (seat, status) in enumerate(seats):
    print(f"{i + 1}. {seat}: {status}")
